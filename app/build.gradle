plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.protobuf' version '0.8.17'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "al.bruno.fruit.diary"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "al.bruno.fruit.diary.CustomTestRunner"
//        testInstrumentationRunnerArguments clearPackageData: 'true'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    sourceSets {
        String sharedTestDir = "src/sharedTest/java"
        test {
            java.srcDirs sharedTestDir
        }
        androidTest {
            java.srcDirs sharedTestDir
        }
    }
//    sourceSets {
//        main {
//            java {
//                srcDirs 'src/main/java', 'src/main/java/sharedTest'
//            }
//        }
//    }
//
    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['**/attach_hotspot_windows.dll', 'META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
    namespace 'al.bruno.fruit.diary'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.6.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0-beta02'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    // Using Dagger in androidTest and Robolectric too
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3'
    implementation 'com.squareup.picasso:picasso:2.71828'
    // room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    //
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // Dependencies for local unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    // Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    // Espresso dependencies
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation 'com.google.truth:truth:1.1.2'
    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    // Core library
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"

    //
    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
    //and/or
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'

    //kotlin helper methods
    testImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'
    //and/or
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'

//
//    androidTestImplementation "androidx.room:room-testing:$room_version"

}
